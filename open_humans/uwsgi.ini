[uwsgi]
# Heroku expects process to quit on SIGTERM
die-on-term = true

# Specify the DJANGO_SETTINGS_MODULE via the environment
env = DJANGO_SETTINGS_MODULE=open_humans.settings

# Handle concurrency via gevent
gevent = 100

# Kill requests that take longer than 300 seconds
harakiri = 300
http-timeout = 300

# Log killed workers
harakiri-verbose = true

# Listen via HTTP on the port specified in the environment
http-socket = :$(PORT)

# Start a master process to manage workers
master = true

# Restart a worker after it handles 5000 requests
max-requests = 5000

# Reload if memory used is >=128mb
reload-on-rss = 134217728

# Output memory usage information to STDOUT
memory-report = true

# Specify the Python module to handle requests
module = open_humans.wsgi:application

# Clear environment on exit
vacuum = true

# Run a minimum of 2 workers
cheaper = 2

# Use the busyness algorithm for launching workers
cheaper-algo = busyness

# Start 3 workers at startup
cheaper-initial = 3

# Increase by 1 worker at a time if needed
cheaper-step = 1

# Prevent launching new workers if memory used is >=384mb
cheaper-rss-limit-soft = 402653184

# Stop a worker if memory used is >=512mb (maximum for a standard 1x dyno)
cheaper-rss-limit-hard = 536870912

# Detect (and scale) based on busyness every 30 seconds
cheaper-overload = 30

# Stop workers if we're idle for 5 minutes (30 seconds * 10 cycles)
cheaper-busyness-multiplier = 10

# Log busyness messages
cheaper-busyness-verbose = true

# Maximum of 6 workers (8 was too many for Heroku due to memory constraints)
workers = 6

# If VIRTUAL_ENV is set then use its value to specify the virtualenv directory.
# This is used primarily for local development, where VIRTUAL_ENV is managed by
# the `virtualenv` package.
if-env = VIRTUAL_ENV
virtualenv = %(_)
endif =
