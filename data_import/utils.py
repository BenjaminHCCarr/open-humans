from datetime import datetime
from uuid import uuid4


def get_upload_path(instance, filename):
    """
    Construct a unique S3 path for a source and filename.
    """
    # sometimes the source is the instance; sometimes an instance is passed in
    # that has a source attribute.
    if hasattr(instance, 'source'):
        source = instance.source
    elif hasattr(instance, '_meta'):
        source = instance._meta.app_label
    else:
        source = instance

    return '{0}{1}'.format(get_upload_dir(source=source), filename)


def get_upload_dir(source):
    """
    Construct a unique S3 key for a source.
    """
    return 'data-files/{0}/{1}/{2}/'.format(
        source,
        str(uuid4()),
        datetime.now().strftime('%Y%m%dT%H%M%SZ'))


def get_upload_dir_validator(source):
    """
    Return regexp string that should match a path generated by get_upload_dir.
    """
    return r'^member/uploaded-data/{0}/[0-9a-f-]{{32}}/\d+/'.format(
        source._meta.app_label)
